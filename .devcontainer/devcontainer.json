{
	"$schema": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.base.schema.json",
	"name": "python-poetry",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"VARIANT": "3.12",
			"DOCKER_IN_DOCKER": "1",
			"OH_MY_POSH": "1"
		}
	},
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"github.vscode-github-actions",
				"ms-azuretools.vscode-docker",
				"ms-python.black-formatter",
				"ms-python.isort",
				"ms-python.pylint",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"njpwerner.autodocstring"
			],
			"settings": {
				"isort.check": true,
				"python.defaultInterpreterPath": "/home/vscode/.cache/pypoetry/virtualenvs/ntpu-linebot-qOxGW-we-py3.12/bin/python"
			}
		}
	},
	"forwardPorts": [
		10000
	],
	"postCreateCommand": {
		"bash": "if [ -e .devcontainer/theme.omp.json ]; then echo 'eval \"$(oh-my-posh init bash --config .devcontainer/theme.omp.json)\"' >> ~/.bashrc; fi",
		"zsh": "if [ -e .devcontainer/theme.omp.json ]; then echo 'eval \"$(oh-my-posh init zsh --config .devcontainer/theme.omp.json)\"' >> ~/.zshrc; fi"
	},
	"postStartCommand": "if [ -e pyproject.toml ]; then rm -rf .venv && poetry install --sync --no-root; fi"
}
