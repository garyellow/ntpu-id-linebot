# This Action requires setting the following secrets:
#
# - RENDER_API_KEY (create from the Account Settings page)
# - RENDER_SERVICE_ID (the service to create a preview for)
#
# And the following variables:
#
# - REGISTRY (the registry to push the image to, e.g. docker.io)

name: Update Preview

on:
  pull_request:
    types: [synchronize]
    paths:
      - app.py
      - ntpu_linebot/**/.py
      - pyproject.toml
      - poetry.lock
      - Dockerfile
      - .github/workflows/*.yml

jobs:
  prepare:
    name: PREPARE HEAD REF
    runs-on: ubuntu-latest

    outputs:
      head_ref: ${{ steps.head_ref.outputs.head_ref }}

    steps:
      - name: Generate github.head_ref with underline style
        id: head_ref
        run: echo "head_ref=$(echo ${{ github.head_ref }} | tr / _)" >> $GITHUB_OUTPUT

  registry:
    name: PUSH PREVIEW IMAGE TO REGISTRY
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ vars.REGISTRY }}/${{ github.repository }}:${{ needs.prepare.outputs.head_ref }}

  fetch:
    name: FETCH PREVIEW ON RENDER
    runs-on: ubuntu-latest
    needs: prepare

    outputs:
      response: ${{ steps.service.outputs.response }}
      head_ref: ${{ needs.prepare.outputs.head_ref }}

    steps:
      - name: Generate Tags substring
        id: tag
        run: echo service-name=$(echo ${{ needs.prepare.outputs.head_ref }} | cut -c 1-8) >> $GITHUB_OUTPUT

      - name: Get Render Preview services
        uses: fjogeleit/http-request-action@v1
        id: service
        with:
          method: GET
          url: https://api.render.com/v1/services?type=web_service&limit=1&name=NTPU-LINEBOT%20Preview%20${{ steps.tag.outputs.service-name }}
          bearerToken: ${{ secrets.RENDER_API_KEY }}

  create:
    if: needs.fetch.outputs.response == '[]'
    name: CREATE PREVIEW SERVICE
    runs-on: ubuntu-latest
    needs: [fetch, registry]

    permissions:
      pull-requests: write

    steps:
      - name: Create Render Preview Service
        uses: fjogeleit/http-request-action@v1
        id: render
        with:
          url: https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/preview
          bearerToken: ${{ secrets.RENDER_API_KEY }}
          data: |
            {
              "imagePath": "${{ vars.REGISTRY }}/${{ github.repository }}:${{ needs.fetch.outputs.head_ref }}"
            }

      - name: Set Docker Command
        uses: fjogeleit/http-request-action@v1
        with:
          method: PATCH
          url: https://api.render.com/v1/services/${{ fromJson(steps.render.outputs.response).service.id }}
          bearerToken: ${{ secrets.RENDER_API_KEY }}
          data: |
            {
              "serviceDetails":
                {
                  "envSpecificDetails":
                    {
                      "dockerCommand": "sanic app:app --host=0.0.0.0 --port=10000 --debug"
                    }
                }
            }

      - name: Redeploy Render Preview Service
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://api.render.com/v1/services/${{ fromJson(steps.render.outputs.response).service.id }}/deploys
          bearerToken: ${{ secrets.RENDER_API_KEY }}

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## Preview is created!

            Your Preview Image URL is https://${{ vars.REGISTRY }}/${{ github.repository }}:${{ needs.fetch.outputs.head_ref }}.

            Your [Render](https://render.com) Preview Server URL is ${{ fromJson(steps.render.outputs.response).service.serviceDetails.url }}.

            Follow its progress at https://dashboard.render.com/web/${{ fromJson(steps.render.outputs.response).service.id }}.

  update:
    if: needs.fetch.outputs.response != '[]'
    name: UPDATE PREVIEW SERVICE
    runs-on: ubuntu-latest
    needs: [fetch, registry]

    permissions:
      pull-requests: write

    steps:
      - name: Redeploy Render Preview Service
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://api.render.com/v1/services/${{ fromJson(needs.fetch.outputs.response)[0].service.id }}/deploys
          bearerToken: ${{ secrets.RENDER_API_KEY }}

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## Preview is updated!

            Your Preview Image URL is https://${{ vars.REGISTRY }}/${{ github.repository }}:${{ needs.fetch.outputs.head_ref }}.

            Your [Render](https://render.com) Preview Server URL is ${{ fromJson(needs.fetch.outputs.response)[0].service.serviceDetails.url }}.

            Follow its progress at https://dashboard.render.com/web/${{ fromJson(needs.fetch.outputs.response)[0].service.id }}.
