# This Action requires setting the following secrets:
#
# - RENDER_API_KEY (create from the Account Settings page)
# - RENDER_SERVICE_ID (the service to create a preview for)

name: CI CD Check

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main

jobs:
  ci:
    name: CI CHECK
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:preview
          cache-from: type=gha
          cache-to: type=gha,mode=max

  cd:
    name: CD CHECK
    runs-on: ubuntu-latest
    needs: ci
    concurrency: create-preview

    steps:
      - name: Create Render Preview Service
        uses: fjogeleit/http-request-action@v1
        id: render
        with:
          url: https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/preview
          bearerToken: ${{ secrets.RENDER_API_KEY }}
          data: |
            {
              "imagePath": "ghcr.io/${{ github.repository }}:preview"
            }

      - name: Wait for Deployment
        id: check
        run: |
          for i in {1..20}; do
            status=$(curl -sSL \
              -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              "https://api.render.com/v1/services/${{ fromJson(steps.render.outputs.response).service.id }}/deploys/${{ fromJson(steps.render.outputs.response).deployId }}" \
              | jq -r .status)

            [[ $status != *"_in_progress" ]] && {
              echo "status=$status" >> "$GITHUB_OUTPUT"
              [[ $status == *"fail"* ]] && exit 1
              exit 0
            }

            echo "Checking deployment status: attempt $i/20..."
            sleep 15
          done

          echo "Deployment timed out after 5 minutes"
          exit 1

  cleanup:
    name: DELETE PREVIEW SERVICE
    runs-on: ubuntu-latest

    steps:
      - name: Get Render Preview services
        uses: fjogeleit/http-request-action@v1
        id: service
        with:
          method: GET
          url: https://api.render.com/v1/services?type=web_service&limit=1&name=ntpu-linebot%20Preview%20preview
          bearerToken: ${{ secrets.RENDER_API_KEY }}

      - if: steps.service.outputs.response != '[]'
        name: Delete Render Preview service
        uses: fjogeleit/http-request-action@v1
        with:
          method: DELETE
          url: https://api.render.com/v1/services/${{ fromJson(steps.service.outputs.response)[0].service.id }}
          bearerToken: ${{ secrets.RENDER_API_KEY }}
